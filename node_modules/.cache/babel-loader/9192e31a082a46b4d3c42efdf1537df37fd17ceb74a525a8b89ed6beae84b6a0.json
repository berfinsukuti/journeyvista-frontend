{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\journeyvista\\\\journeyvista-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import Map from './Map'; // Harita bileşeni\n// import { calculateDay, formatDate } from './utils'; // Yardımcı fonksiyonlar\n// import './styles.css'; // CSS dosyasını dahil edin\n\n// const App = () => {\n//   const [tours, setTours] = useState([]); // Tüm turlar\n//   const [activeTours, setActiveTours] = useState([]); // Aktif turlar\n//   const [selectedTour, setSelectedTour] = useState(null); // Seçilen tur\n//   const [loading, setLoading] = useState(true); // Yükleniyor durumu\n//   const [error, setError] = useState(null); // Hata durumu\n\n//   // API'den turların bilgilerini çek\n//   useEffect(() => {\n//     axios.get('http://127.0.0.1:8000/tours/') // Backend API adresiniz\n//       .then(response => {\n//         const allTours = response.data;\n\n//         // Aktif turları filtrele\n//         const today = new Date();\n//         const filteredTours = allTours.filter(tour => {\n//           const start = new Date(tour.start_date);\n//           const end = new Date(tour.end_date);\n//           return today >= start && today <= end; // Aktiflik kontrolü\n//         });\n\n//         setTours(allTours); // Tüm turları sakla\n//         setActiveTours(filteredTours); // Sadece aktif turları sakla\n//       })\n//       .catch(err => setError(\"Veri alınırken bir hata oluştu!\"))\n//       .finally(() => setLoading(false)); // Veri çekme tamamlandı\n//   }, []);\n\n//   // Yükleniyor durumu\n//   if (loading) {\n//     return <div>Yükleniyor...</div>;\n//   }\n\n//   // Hata durumu\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   return (\n//     <div id=\"root\">\n//       {/* Liste Görünümü */}\n//       <div className=\"list-container\">\n//         <h1>JourneyVista</h1>\n//         <ul>\n//           {tours.map(tour => (\n//             <li \n//               key={tour.id} \n//               className={activeTours.includes(tour) ? 'active-tour' : 'inactive-tour'}\n//               onClick={() => setSelectedTour(tour)} // Tıklanan turu seç\n//             >\n//               <h2>{tour.name}</h2>\n//               <img\n//                 src={`http://127.0.0.1:8000${tour.image}`}\n//                 alt={tour.name}\n//                 style={{ width: '100%', height: 'auto', marginBottom: '10px' }}\n//               />\n//               <p>Rehber: {tour.guide}</p>\n//               <p>Başlangıç Tarihi: {formatDate(tour.start_date)}</p>\n//               <p>Bitiş Tarihi: {formatDate(tour.end_date)}</p>\n//               <p>Bugün Kaçıncı Gün: {calculateDay(tour.start_date)}</p>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n\n//       {/* Harita Görünümü */}\n//       <div className=\"map-container\">\n//         <Map tours={activeTours} selectedTour={selectedTour} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Map from './Map';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tours, setTours] = useState([]);\n  const [activeTours, setActiveTours] = useState([]);\n  const [selectedTour, setSelectedTour] = useState(null);\n  const [cities, setCities] = useState([]);\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/tours/').then(response => {\n      const allTours = response.data;\n      const today = new Date();\n      const filteredTours = allTours.filter(tour => {\n        const start = new Date(tour.start_date);\n        const end = new Date(tour.end_date);\n        return today >= start && today <= end;\n      });\n      setTours(allTours);\n      setActiveTours(filteredTours);\n    });\n    axios.get('http://127.0.0.1:8000/cities/').then(response => setCities(response.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"JourneyVista\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: activeTours.map(tour => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedTour(tour),\n          className: (selectedTour === null || selectedTour === void 0 ? void 0 : selectedTour.id) === tour.id ? 'active-tour' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: tour.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://127.0.0.1:8000${tour.image}`,\n            alt: tour.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rehber: \", tour.guide]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Ba\\u015Flang\\u0131\\xE7 Tarihi: \", new Date(tour.start_date).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Biti\\u015F Tarihi: \", new Date(tour.end_date).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Bug\\xFCn Ka\\xE7\\u0131nc\\u0131 G\\xFCn: \", Math.floor((new Date() - new Date(tour.start_date)) / (1000 * 60 * 60 * 24)) + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, tour.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        tours: activeTours,\n        cities: cities,\n        selectedTour: selectedTour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"VPq3CMwS9tZ17mYEmPAYVFSkHd8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Map","jsxDEV","_jsxDEV","App","_s","tours","setTours","activeTours","setActiveTours","selectedTour","setSelectedTour","cities","setCities","get","then","response","allTours","data","today","Date","filteredTours","filter","tour","start","start_date","end","end_date","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","src","image","alt","guide","toLocaleDateString","Math","floor","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/journeyvista/journeyvista-frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import Map from './Map'; // Harita bileşeni\n// import { calculateDay, formatDate } from './utils'; // Yardımcı fonksiyonlar\n// import './styles.css'; // CSS dosyasını dahil edin\n\n// const App = () => {\n//   const [tours, setTours] = useState([]); // Tüm turlar\n//   const [activeTours, setActiveTours] = useState([]); // Aktif turlar\n//   const [selectedTour, setSelectedTour] = useState(null); // Seçilen tur\n//   const [loading, setLoading] = useState(true); // Yükleniyor durumu\n//   const [error, setError] = useState(null); // Hata durumu\n  \n\n//   // API'den turların bilgilerini çek\n//   useEffect(() => {\n//     axios.get('http://127.0.0.1:8000/tours/') // Backend API adresiniz\n//       .then(response => {\n//         const allTours = response.data;\n\n//         // Aktif turları filtrele\n//         const today = new Date();\n//         const filteredTours = allTours.filter(tour => {\n//           const start = new Date(tour.start_date);\n//           const end = new Date(tour.end_date);\n//           return today >= start && today <= end; // Aktiflik kontrolü\n//         });\n\n//         setTours(allTours); // Tüm turları sakla\n//         setActiveTours(filteredTours); // Sadece aktif turları sakla\n//       })\n//       .catch(err => setError(\"Veri alınırken bir hata oluştu!\"))\n//       .finally(() => setLoading(false)); // Veri çekme tamamlandı\n//   }, []);\n\n//   // Yükleniyor durumu\n//   if (loading) {\n//     return <div>Yükleniyor...</div>;\n//   }\n\n//   // Hata durumu\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   return (\n//     <div id=\"root\">\n//       {/* Liste Görünümü */}\n//       <div className=\"list-container\">\n//         <h1>JourneyVista</h1>\n//         <ul>\n//           {tours.map(tour => (\n//             <li \n//               key={tour.id} \n//               className={activeTours.includes(tour) ? 'active-tour' : 'inactive-tour'}\n//               onClick={() => setSelectedTour(tour)} // Tıklanan turu seç\n//             >\n//               <h2>{tour.name}</h2>\n//               <img\n//                 src={`http://127.0.0.1:8000${tour.image}`}\n//                 alt={tour.name}\n//                 style={{ width: '100%', height: 'auto', marginBottom: '10px' }}\n//               />\n//               <p>Rehber: {tour.guide}</p>\n//               <p>Başlangıç Tarihi: {formatDate(tour.start_date)}</p>\n//               <p>Bitiş Tarihi: {formatDate(tour.end_date)}</p>\n//               <p>Bugün Kaçıncı Gün: {calculateDay(tour.start_date)}</p>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n\n//       {/* Harita Görünümü */}\n//       <div className=\"map-container\">\n//         <Map tours={activeTours} selectedTour={selectedTour} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Map from './Map';\nimport './styles.css';\n\nconst App = () => {\n  const [tours, setTours] = useState([]);\n  const [activeTours, setActiveTours] = useState([]);\n  const [selectedTour, setSelectedTour] = useState(null);\n  const [cities, setCities] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/tours/')\n      .then(response => {\n        const allTours = response.data;\n        const today = new Date();\n        const filteredTours = allTours.filter(tour => {\n          const start = new Date(tour.start_date);\n          const end = new Date(tour.end_date);\n          return today >= start && today <= end;\n        });\n        setTours(allTours);\n        setActiveTours(filteredTours);\n      });\n    \n    axios.get('http://127.0.0.1:8000/cities/')\n      .then(response => setCities(response.data));\n  }, []);\n\n  return (\n    <div id=\"root\">\n      <div className=\"list-container\">\n        <h1>JourneyVista</h1>\n        <ul>\n          {activeTours.map(tour => (\n            <li\n              key={tour.id}\n              onClick={() => setSelectedTour(tour)}\n              className={selectedTour?.id === tour.id ? 'active-tour' : ''}\n            >\n              <h2>{tour.name}</h2>\n              <img\n                src={`http://127.0.0.1:8000${tour.image}`}\n                alt={tour.name}\n              />\n              <p>Rehber: {tour.guide}</p>\n              <p>Başlangıç Tarihi: {new Date(tour.start_date).toLocaleDateString()}</p>\n              <p>Bitiş Tarihi: {new Date(tour.end_date).toLocaleDateString()}</p>\n              <p>Bugün Kaçıncı Gün: {Math.floor((new Date() - new Date(tour.start_date)) / (1000 * 60 * 60 * 24)) + 1}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"map-container\">\n        <Map tours={activeTours} cities={cities} selectedTour={selectedTour} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}