{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\journeyvista\\\\journeyvista-frontend\\\\src\\\\Map.js\";\n// import React from 'react';\n// import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\n// import 'leaflet/dist/leaflet.css';\n// import L from 'leaflet';\n\n// // Özel Marker İkonu\n// const customIcon = new L.Icon({\n//   iconUrl: '/marker.png', // Eğer public klasöründeyse\n//   iconSize: [32, 32],\n//   iconAnchor: [16, 32],\n// });\n\n// const Map = ({ tours }) => {\n//   return (\n//     <div className=\"app-container\">\n//       {/* Liste Görünümü */}\n//       <div className=\"list-container\">\n//         <h2>Tur Listesi</h2>\n//         <ul>\n//           {tours.map((tour) => (\n//             <li key={tour.id} className=\"tour-item\">\n//               <h3>{tour.name}</h3>\n//               <p>Rehber: {tour.guide}</p>\n//               <p>Başlangıç Tarihi: {new Date(tour.start_date).toLocaleDateString()}</p>\n//               <p>Bitiş Tarihi: {new Date(tour.end_date).toLocaleDateString()}</p>\n//               <img\n//                 src={tour.image}\n//                 alt={`${tour.name} görseli`}\n//                 style={{ width: '100px', height: 'auto' }}\n//               />\n//               <ul>\n//                 {tour.days.map((day) => (\n//                   <li key={day.day_number}>\n//                     <strong>Gün {day.day_number}:</strong> {day.city} - {day.description}\n//                   </li>\n//                 ))}\n//               </ul>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n\n//       {/* Harita Görünümü */}\n//       <div className=\"map-container\">\n//         <MapContainer\n//           center={[41.0082, 28.9784]} // İstanbul koordinatları\n//           zoom={3}\n//           style={{ height: '100%', width: '100%' }}\n//         >\n//           <TileLayer\n//             url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//             attribution=\"&copy; OpenStreetMap contributors\"\n//           />\n//           {tours.map((tour) =>\n//             tour.days.map((day) => (\n//               <Marker\n//                 key={`${tour.id}-${day.day_number}`}\n//                 position={[day.latitude || 0, day.longitude || 0]} // Şehir koordinatları\n//                 icon={customIcon}\n//               >\n//                 <Popup>\n//                   <h3>{tour.name}</h3>\n//                   <p>Rehber: {tour.guide}</p>\n//                   <p>Gün: {day.day_number}</p>\n//                   <p>Şehir: {day.city}</p>\n//                   <p>Açıklama: {day.description}</p>\n//                 </Popup>\n//               </Marker>\n//             ))\n//           )}\n//         </MapContainer>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Map;\n\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customIcon = new L.Icon({\n  iconUrl: '/marker-icon.png',\n  // Marker dosyanın doğru yolda olduğundan emin ol.\n  iconSize: [32, 32],\n  iconAnchor: [16, 32]\n});\nconst Map = ({\n  tours\n}) => {\n  const today = new Date();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [0, 0],\n      zoom: 2,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), tours.map(tour => tour.days.map(day => {\n        const startDate = new Date(tour.start_date);\n        const activeDayNumber = Math.ceil((today - startDate) / (1000 * 60 * 60 * 24));\n        if (day.day_number === activeDayNumber) {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: [day.latitude || 0, day.longitude || 0],\n            icon: customIcon,\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: tour.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Rehber: \", tour.guide]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"G\\xFCn: \", day.day_number]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u015Eehir: \", day.city]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"A\\xE7\\u0131klama: \", day.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Ba\\u015Flang\\u0131\\xE7: \", new Date(tour.start_date).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Biti\\u015F: \", new Date(tour.end_date).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)\n          }, `${tour.id}-${day.day_number}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this);\n        }\n        return null;\n      }))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","customIcon","Icon","iconUrl","iconSize","iconAnchor","Map","tours","today","Date","className","children","center","zoom","style","height","width","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","tour","days","day","startDate","start_date","activeDayNumber","Math","ceil","day_number","position","latitude","longitude","icon","name","guide","city","description","toLocaleDateString","end_date","id","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/journeyvista/journeyvista-frontend/src/Map.js"],"sourcesContent":["// import React from 'react';\r\n// import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\n// import 'leaflet/dist/leaflet.css';\r\n// import L from 'leaflet';\r\n\r\n// // Özel Marker İkonu\r\n// const customIcon = new L.Icon({\r\n//   iconUrl: '/marker.png', // Eğer public klasöründeyse\r\n//   iconSize: [32, 32],\r\n//   iconAnchor: [16, 32],\r\n// });\r\n\r\n// const Map = ({ tours }) => {\r\n//   return (\r\n//     <div className=\"app-container\">\r\n//       {/* Liste Görünümü */}\r\n//       <div className=\"list-container\">\r\n//         <h2>Tur Listesi</h2>\r\n//         <ul>\r\n//           {tours.map((tour) => (\r\n//             <li key={tour.id} className=\"tour-item\">\r\n//               <h3>{tour.name}</h3>\r\n//               <p>Rehber: {tour.guide}</p>\r\n//               <p>Başlangıç Tarihi: {new Date(tour.start_date).toLocaleDateString()}</p>\r\n//               <p>Bitiş Tarihi: {new Date(tour.end_date).toLocaleDateString()}</p>\r\n//               <img\r\n//                 src={tour.image}\r\n//                 alt={`${tour.name} görseli`}\r\n//                 style={{ width: '100px', height: 'auto' }}\r\n//               />\r\n//               <ul>\r\n//                 {tour.days.map((day) => (\r\n//                   <li key={day.day_number}>\r\n//                     <strong>Gün {day.day_number}:</strong> {day.city} - {day.description}\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n\r\n//       {/* Harita Görünümü */}\r\n//       <div className=\"map-container\">\r\n//         <MapContainer\r\n//           center={[41.0082, 28.9784]} // İstanbul koordinatları\r\n//           zoom={3}\r\n//           style={{ height: '100%', width: '100%' }}\r\n//         >\r\n//           <TileLayer\r\n//             url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n//             attribution=\"&copy; OpenStreetMap contributors\"\r\n//           />\r\n//           {tours.map((tour) =>\r\n//             tour.days.map((day) => (\r\n//               <Marker\r\n//                 key={`${tour.id}-${day.day_number}`}\r\n//                 position={[day.latitude || 0, day.longitude || 0]} // Şehir koordinatları\r\n//                 icon={customIcon}\r\n//               >\r\n//                 <Popup>\r\n//                   <h3>{tour.name}</h3>\r\n//                   <p>Rehber: {tour.guide}</p>\r\n//                   <p>Gün: {day.day_number}</p>\r\n//                   <p>Şehir: {day.city}</p>\r\n//                   <p>Açıklama: {day.description}</p>\r\n//                 </Popup>\r\n//               </Marker>\r\n//             ))\r\n//           )}\r\n//         </MapContainer>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Map;\r\n\r\nimport React from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\nconst customIcon = new L.Icon({\r\n  iconUrl: '/marker-icon.png', // Marker dosyanın doğru yolda olduğundan emin ol.\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 32],\r\n});\r\n\r\nconst Map = ({ tours }) => {\r\n  const today = new Date();\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <MapContainer center={[0, 0]} zoom={2} style={{ height: '100%', width: '100%' }}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {tours.map((tour) =>\r\n          tour.days.map((day) => {\r\n            const startDate = new Date(tour.start_date);\r\n            const activeDayNumber = Math.ceil((today - startDate) / (1000 * 60 * 60 * 24));\r\n\r\n            if (day.day_number === activeDayNumber) {\r\n              return (\r\n                <Marker\r\n                  key={`${tour.id}-${day.day_number}`}\r\n                  position={[day.latitude || 0, day.longitude || 0]}\r\n                  icon={customIcon}\r\n                >\r\n                  <Popup>\r\n                    <h3>{tour.name}</h3>\r\n                    <p>Rehber: {tour.guide}</p>\r\n                    <p>Gün: {day.day_number}</p>\r\n                    <p>Şehir: {day.city}</p>\r\n                    <p>Açıklama: {day.description}</p>\r\n                    <p>Başlangıç: {new Date(tour.start_date).toLocaleDateString()}</p>\r\n                    <p>Bitiş: {new Date(tour.end_date).toLocaleDateString()}</p>\r\n                  </Popup>\r\n                </Marker>\r\n              );\r\n            }\r\n            return null;\r\n          })\r\n        )}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}